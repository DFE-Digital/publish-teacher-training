name: Find & Publish Load Tests

on:
  workflow_dispatch:

jobs:
  load-testing:
    runs-on: ubuntu-latest
    env:
      K6_CLOUD_API_TOKEN: ${{ secrets.K6_CLOUD_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up k6
        uses: grafana/setup-k6@v0

      - name: Go to load_testing directory
        run: cd load_testing && cp .env.example .env

      - name: Run BASELINE scenario in Grafana Cloud
        id: baseline
        working-directory: load_testing
        run: |
          echo "::group::Baseline"
          DASHBOARD_URL=$(k6 cloud --quiet \
            --env SCENARIO=baseline --env ENVIRONMENT=staging \
            find/find-load-test.js | grep -Eo 'https://app.k6.io/runs/[0-9]+' | head -1)
          echo "BASELINE_DASHBOARD_URL=$DASHBOARD_URL" >> $GITHUB_ENV
          echo "K6 Baseline Dashboard: $DASHBOARD_URL"
          echo "::endgroup::"

      - name: Wait before PEAK test
        run: sleep 30

      - name: Run PEAK SURGE scenario in Grafana Cloud
        id: peak
        working-directory: load_testing
        run: |
          echo "::group::Peak Surge"
          DASHBOARD_URL=$(k6 cloud --quiet \
            --env SCENARIO=peak-surge --env ENVIRONMENT=staging \
            find/find-load-test.js | grep -Eo 'https://app.k6.io/runs/[0-9]+' | head -1)
          echo "PEAK_DASHBOARD_URL=$DASHBOARD_URL" >> $GITHUB_ENV
          echo "K6 Peak Dashboard: $DASHBOARD_URL"
          echo "::endgroup::"

      - name: Wait before STRESS test
        run: sleep 30

      - name: Run STRESS scenario in Grafana Cloud
        id: stress
        working-directory: load_testing
        run: |
          echo "::group::Stress Test"
          DASHBOARD_URL=$(k6 cloud --quiet \
            --env SCENARIO=stress --env ENVIRONMENT=staging \
            find/find-load-test.js | grep -Eo 'https://app.k6.io/runs/[0-9]+' | head -1)
          echo "STRESS_DASHBOARD_URL=$DASHBOARD_URL" >> $GITHUB_ENV
          echo "K6 Stress Dashboard: $DASHBOARD_URL"
          echo "::endgroup::"

      - name: Print all K6 dashboard links
        run: |
          echo "=== K6 Cloud Test Dashboard Links ==="
          echo ""
          echo "Baseline Dashboard: ${BASELINE_DASHBOARD_URL:-Not Found}"
          echo "Peak Surge Dashboard: ${PEAK_DASHBOARD_URL:-Not Found}"
          echo "Stress Dashboard: ${STRESS_DASHBOARD_URL:-Not Found}"

name: Build and Deploy Prototype
concurrency: build_and_deploy_${{ github.ref_name }}

on:
  workflow_dispatch:

permissions:
  contents: write
  deployments: write
  packages: write
  pull-requests: write
  id-token: write

jobs:
  build:
    name: Build
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      docker_image: ${{ env.DOCKER_IMAGE }}
      image_tag: ${{ env.DOCKER_IMAGE_TAG }}
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/publish-teacher-training

    steps:
      - name: Find open PR for this branch
        id: pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // strip “refs/heads/” → branch name
            const branch = process.env.GITHUB_REF.replace('refs/heads/', '');
            // list open PRs whose head matches this branch
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branch}`,
              state: 'open',
            });
            // if found, return the first number; else empty
            return prs.length ? prs[0].number : '';
        result-encoding: string

      - name: Expose PR number as env
        run: echo "PR_NUMBER=${{ steps.pr.outputs.result }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get values for current commit (Pull request)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # This is the actual PR branch
          GIT_REF=${{ github.head_ref }}
          GIT_BRANCH=${GIT_REF##*/}
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          # This is the latest commit on the actual PR branch
          echo "DOCKER_IMAGE_TAG=${{ github.event.pull_request.head.sha || github.sha }}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Publish-Teacher-Training-Middleman
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
          push: true
          target: middleman
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE}}-middleman:main
            type=registry,ref=${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
          build-args: BUILDKIT_INLINE_CACHE=1

      - name: Build Publish-Teacher-Training
        uses: docker/build-push-action@v6
        with:
          tags: |
            ${{ env.DOCKER_IMAGE}}:${{ env.BRANCH_TAG }}
            ${{ env.DOCKER_IMAGE}}:${{ env.DOCKER_IMAGE_TAG }}
          push: false
          load: true
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE}}:main
            type=registry,ref=${{ env.DOCKER_IMAGE}}:${{ env.BRANCH_TAG }}
            type=registry,ref=${{ env.DOCKER_IMAGE}}-middleman:main
            type=registry,ref=${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            COMMIT_SHA=${{ env.DOCKER_IMAGE_TAG }}

      - name: Push ${{ env.DOCKER_IMAGE }} images for review
        run: docker image push --all-tags ${{ env.DOCKER_IMAGE }}

  deploy-review-app:
    name: Deployment To Review
    environment:
      name: review
    concurrency: deploy_review_${{ env.PR_NUMBER }}
    needs: [build]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy App to Review
        id: deploy_review
        uses: ./.github/actions/deploy/
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          environment: review
          pr-number: ${{ env.PR_NUMBER}}
          sha: ${{ needs.build.outputs.image_tag }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
          azure-storage-connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING_SANITISED }}

      - name: Post comment to Pull Request ${{ github.event.number }}
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: aks
          message: |
            ### Deployments

            | App               | URL                                                                                      |
            | ----------------- | ---------------------------------------------------------------------------------------- |
            | Publish           | <https://publish-review-${{ github.event.number }}.test.teacherservices.cloud>           |
            | Find              | <https://find-review-${{ github.event.number }}.test.teacherservices.cloud>              |

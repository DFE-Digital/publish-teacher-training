name: deploy_v2
description: deploys application to AKS

on:
  pull_request:
    branches:
      - 1633-create-setup-kubectl-github-action-test

outputs:
  deploy-url:
    value: ${{ steps.set_env_var.outputs.deploy_url }}

runs:
  using: composite
  steps:
    - name: Set Environment variables
      id: set_env_var
      shell: bash
      run: |
        tf_vars_file=terraform/aks/workspace_variables/${{ inputs.environment }}.tfvars.json
        echo "cluster=$(jq -r '.cluster' ${tf_vars_file})" >> $GITHUB_ENV
        echo "app_environment=$(jq -r '.app_environment' ${tf_vars_file})" >> $GITHUB_ENV
        echo "key_vault_name=$(jq -r '.key_vault_name' ${tf_vars_file})" >> $GITHUB_ENV
        echo "key_vault_app_secret_name=$(jq -r '.key_vault_app_secret_name' ${tf_vars_file})" >> $GITHUB_ENV
        echo "key_vault_infra_secret_name=$(jq -r '.key_vault_infra_secret_name' ${tf_vars_file})" >> $GITHUB_ENV

        terraform_version=$(awk '/{/{f=/^terraform/;next}f' terraform/aks/providers.tf | grep -o [0-9\.]*)
        echo "TERRAFORM_VERSION=$terraform_version" >> $GITHUB_ENV

        if [ -n "${{ inputs.pr-number }}" ]; then
          APP_NAME=${{ inputs.pr-number }}
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
          echo "deploy_url=https://publish-review-${APP_NAME}.test.teacherservices.cloud" >> $GITHUB_OUTPUT
          echo "DEPLOY_REF=${{ github.head_ref }}" >> $GITHUB_ENV
        else
          app_environment=$(jq -r '.app_environment' ${tf_vars_file})
          echo "DEPLOY_REF=${{ github.ref }}" >> $GITHUB_ENV
          hostname=$(jq -r '.additional_hostnames[0]' ${tf_vars_file})
          if [ ${app_environment} == "production" ]; then
            echo "deploy_url=https://api.publish-teacher-training-courses.service.gov.uk" >> $GITHUB_OUTPUT
          else
            echo "deploy_url=https://${app_environment}.api.publish-teacher-training-courses.service.gov.uk" >> $GITHUB_OUTPUT
          fi
          echo "DEPLOY_REF=${{ github.ref }}" >> $GITHUB_ENV
        fi;

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform ${{ env.TERRAFORM_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - uses: azure/login@v1
      with:
        creds: ${{ inputs.azure-credentials }}

    - name: Validate Azure Key Vault secrets
      uses: DFE-Digital/github-actions/validate-key-vault-secrets@master
      with:
        KEY_VAULT: ${{ env.key_vault_name }}
        SECRETS: |
          ${{ env.key_vault_app_secret_name }}
          ${{ env.key_vault_infra_secret_name }}

    - name: Set up environment variables
      shell: bash
      run: |
        case ${{ env.cluster }} in
          test)
            echo "cluster_rg=s189t01-tsc-ts-rg" >> $GITHUB_ENV
            echo "cluster_name=s189t01-tsc-test-aks" >> $GITHUB_ENV
            ;;
          production)
            echo "cluster_rg=s189p01-tsc-pd-rg" >> $GITHUB_ENV
            echo "cluster_name=s189p01-tsc-production-aks" >> $GITHUB_ENV
            ;;
          *)
            echo "unknown cluster"
            ;;
        esac

        if [ "${{ inputs.environment }}" == "review_aks" ] && [ "${{ inputs.pr-number }}" != "" ]; then
          echo "Set the app name to include the review app PR number."
          echo "app_name=publish-review-${{ inputs.pr-number }}" >> $GITHUB_ENV
        fi

    - name: Install kubectl
      uses: DFE-Digital/github-actions/set-kubectl@1633-create-setup-kubectl-github-action

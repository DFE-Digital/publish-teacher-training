name: deploy
description: deploys application

inputs:
  arm-access-key:
    required: true
  azure-credentials:
    required: true
  environment:
    description: Environment to deploy to
    required: true
  pr-number:
    description: PR number for the review app
    required: false
  sha:
    description: Commit sha to be deployed
    required: true
  slack-webhook:
    required: true

outputs:
  deploy-url:
    value: ${{ steps.set_env_var.outputs.deploy_url }}

runs:
  using: composite
  steps:
    - name: Set Environment variables
      id: set_env_var
      shell: bash
      run: |
        if [ -n "${{ inputs.pr-number }}" ]; then
          echo "APP_NAME=${{ inputs.pr-number }}" >> $GITHUB_ENV
          echo "::set-output name=deploy_url::https://publish-teacher-training-pr-${{ inputs.pr-number }}.london.cloudapps.digital"
          echo "DEPLOY_REF=${{ github.head_ref }}" >> $GITHUB_ENV
        else
          if [ ${{ inputs.environment }} == "production" ]; then
            echo "::set-output name=deploy_url::https://api.publish-teacher-training-courses.service.gov.uk"
          else
            echo "::set-output name=deploy_url::https://${{ inputs.environment }}.api.publish-teacher-training-courses.service.gov.uk"
          fi
          echo "DEPLOY_REF=${{ github.ref }}" >> $GITHUB_ENV
        fi;

        tf_vars_file=terraform/workspace_variables/${{ inputs.environment }}.tfvars.json
        echo "key_vault_name=$(jq -r '.key_vault_name' ${tf_vars_file})" >> $GITHUB_ENV
        echo "key_vault_app_secret_name=$(jq -r '.key_vault_app_secret_name' ${tf_vars_file})" >> $GITHUB_ENV
        echo "key_vault_infra_secret_name=$(jq -r '.key_vault_infra_secret_name' ${tf_vars_file})" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform v1.2.3
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.3

    - uses: azure/login@v1
      with:
        creds: ${{ inputs.azure-credentials }}

    - name: Validate Azure Key Vault secrets
      uses: DFE-Digital/github-actions/validate-key-vault-secrets@master
      with:
        KEY_VAULT: ${{ env.key_vault_name }}
        SECRETS: |
          ${{ env.key_vault_app_secret_name }}
          ${{ env.key_vault_infra_secret_name }}

    - name: Terraform init, plan & apply
      shell: bash
      run: make ${{ inputs.environment }} ci deploy
      env:
        ARM_ACCESS_KEY:             ${{ inputs.arm-access-key }}
        IMAGE_TAG:                  ${{ inputs.sha }}
        TF_VAR_azure_credentials:   ${{ inputs.azure-credentials }}
        CONFIRM_PRODUCTION:         yes

    - name: Run Smoke Tests for ${{ inputs.environment }}
      uses: ./.github/actions/smoke-test/
      with:
        environment: ${{ inputs.environment }}
        pr-number: ${{ inputs.pr-number }}
        slack-webhook: ${{ inputs.slack-webhook }}

    - name: Alert on Failure
      if: ${{ failure() && github.ref == 'refs/heads/main' }}
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: twd_findpub_tech
        SLACK_COLOR: '#ef5343'
        SLACK_ICON_EMOJI: ':github-logo:'
        SLACK_USERNAME: Publish Teacher Training
        SLACK_TITLE: Deploy to ${{ inputs.environment }} Failed
        SLACK_MESSAGE: ':alert: <!channel> Deployment failure on ${{ inputs.environment }} :sadparrot:'
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}

<h2 class="govuk-heading-m">
  <%= t("publish.providers.courses.description_content.course_information_heading") %>
</h2>

<%= govuk_summary_list do |summary_list| %>
  <% enrichment_summary(
    summary_list,
    :course,
    t("publish.providers.courses.description_content.why_train_with_us"),
    value_provided?(markdown(course.about_course)),
    %w[about_course],
    action_path: course.is_withdrawn? ? nil : about_this_course_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    action_visually_hidden_text: t("publish.providers.courses.description_content.about_course_hidden_text"),
  ) %>

  <% enrichment_summary(
    summary_list,
    :course,
    t("publish.providers.courses.description_content.about_course_label"),
    value_provided?(markdown(course.about_course)),
    %w[about_course],
    action_path: course.is_withdrawn? ? nil : about_this_course_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    action_visually_hidden_text: t("publish.providers.courses.description_content.about_course_hidden_text"),
  ) %>

  <% enrichment_summary(
       summary_list,
       :course,
       t("publish.providers.courses.description_content.how_school_placements_work_label"),
       value_provided?(markdown(course.how_school_placements_work)),
       %w[how_school_placements_work],
       action_path: course.is_withdrawn? ? nil : school_placements_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
       action_visually_hidden_text: t("publish.providers.courses.description_content.how_school_placements_work_hidden_text"),
     ) %>

  <% enrichment_summary(
    summary_list,
    :course,
    t("publish.providers.courses.description_content.interview_process_label"),
    value_provided?(markdown(course.interview_process)),
    %w[interview_process],
    action_path: course.is_withdrawn? ? nil : interview_process_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    action_visually_hidden_text: t("publish.providers.courses.description_content.interview_process_hidden_text"),
  ) %>
<% end %>

<h2 class="govuk-heading-m"><%= course.length_and_fees_or_salary_heading %></h2>

<%= govuk_summary_list do |summary_list| %>
  <% if course.has_fees? %>
    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.course_length_label"),
      value_provided?(course.length),
      %w[course_length],
      action_path: course.cannot_change_course_length? ? nil : length_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    ) %>

    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.fee_for_uk_students_label"),
      value_provided?(number_to_currency(course.fee_uk_eu)),
      %w[fee_uk_eu],
      action_path: course.is_withdrawn? ? nil : fees_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
      action_visually_hidden_text: t("publish.providers.courses.description_content.fee_for_uk_students_hidden_text"),
    ) %>

    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.fee_for_international_students_label"),
      value_provided?(number_to_currency(course.fee_international)),
      %w[fee_international],
      action_path: course.is_withdrawn? ? nil : fees_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    ) %>

    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.fee_details_optional_label"),
      value_provided?(markdown(course.fee_details)),
      %w[fee_details],
      action_path: course.is_withdrawn? ? nil : fees_and_financial_support_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
      action_visually_hidden_text: t("publish.providers.courses.description_content.fee_details_hidden_text"),
    ) %>

    <% summary_list.with_row(html_attributes: { data: { qa: "course__financial_incentives" } }) do |row| %>
      <% row.with_key { t("publish.providers.courses.description_content.financial_incentive_details_label") } %>
      <% row.with_value { course.financial_incentive_details } %>
      <% row.with_action %>
    <% end %>
  <% else %>
    <% enrichment_summary(
         summary_list,
         :course,
         t("publish.providers.courses.description_content.course_length_label"),
         value_provided?(course.length),
         %w[course_length],
         action_path: course.cannot_change_course_length? ? nil : length_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
         action_visually_hidden_text: t("publish.providers.courses.description_content.course_length_hidden_text"),
       ) %>

    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.salary_label"),
      value_provided?(markdown(course.salary_details)),
      %w[salary_details],
      action_path: course.is_withdrawn? ? nil : salary_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
    ) %>
  <% end %>
<% end %>

<h2 class="govuk-heading-m">
  <%= t("publish.providers.courses.description_content.requirements_heading") %>
</h2>

  <%= govuk_summary_list do |summary_list| %>
    <% if course.show_degree_requirements_row? %>
      <% enrichment_summary(
        summary_list,
        :course,
        t("publish.providers.courses.description_content.degree_label"),
        render(DegreeRowContent.new(course:, errors: @errors)),
        %w[degree_grade degree_subject_requirements],
        action_path: !course.is_withdrawn? && course.degree_section_complete? ? degrees_start_publish_provider_recruitment_cycle_course_path(@provider.provider_code, @provider.recruitment_cycle_year, course.course_code) : nil,
      ) %>
    <% end %>

    <% if course.teacher_degree_apprenticeship? %>
      <% enrichment_summary(
        summary_list,
        :course,
        t("publish.providers.courses.description_content.a_levels_label"),
        render(ALevelRowComponent.new(course:, errors: @errors)),
        %w[a_level_subject_requirements accept_pending_a_level accept_a_level_equivalency],
        action_path: course.a_level_change_path,
        action_visually_hidden_text: "A levels",
        render_errors: false,
      ) %>
    <% end %>

    <% enrichment_summary(
      summary_list,
      :course,
      t("publish.providers.courses.description_content.gcse_label"),
      render(GcseRowContent.new(course:, errors: @errors)),
      %w[accept_pending_gcse accept_gcse_equivalency accept_english_gcse_equivalency accept_maths_gcse_equivalency accept_science_gcse_equivalency additional_gcse_equivalencies],
      action_path: !course.is_withdrawn? && course.gcse_section_complete? ? gcses_pending_or_equivalency_tests_publish_provider_recruitment_cycle_course_path(@provider.provider_code, @provider.recruitment_cycle_year, course.course_code) : nil,
    ) %>
<% end %>

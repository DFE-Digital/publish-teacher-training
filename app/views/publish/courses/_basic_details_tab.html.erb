<%= govuk_summary_list do |summary_list| %>
 <% summary_list.row(html_attributes: { data: { qa: "course__level" } }) do |row|
      row.key { "Subject level" }
      row.value { course.level.humanize }
      row.action
    end

    summary_list.row(html_attributes: { data: { qa: "course__is_send" } }) do |row|
      row.key { "Special educational needs and disability (SEND)" }
      row.value { course.is_send? }
      if course.edit_course_options[:show_is_send] && !course.is_withdrawn?
        row.action(
          # href: send_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
          visually_hidden_text: "SEND"
        )
      else
        row.action
      end
    end

    unless course.further_education_course?
      summary_list.row(html_attributes: { data: { qa: "course__subjects" } }) do |row|
        row.key { "Subject".pluralize(course.subjects.count) }
        row.value { course.chosen_subjects }
        if course.is_withdrawn?
          row.action
        else
          row.action(
            href: subjects_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
            visually_hidden_text: "subjects"
          )
        end
      end
    end

    if course.applicable_for_engineers_teach_physics?
      summary_list.row(html_attributes: { data: { qa: "course__engineers_teach_physics" } }) do |row|
        row.key { "Engineers Teach Physics" }
        row.value { course.engineers_teach_physics? ? "Yes" : "No" }
        row.action(
          href: engineers_teach_physics_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code, course: { subjects_ids: course.subject_ids }, skip_languages_goto_confirmation: true),
          visually_hidden_text: "Engineers Teach Physics"
        )
      end
    end

    unless course.further_education_course?
      summary_list.row(html_attributes: { data: { qa: "course__age_range" } }) do |row|
        row.key { "Age range" }
        row.value { course.age_range }
        if course.is_withdrawn?
          row.action
        else
          row.action(
            href: age_range_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
            visually_hidden_text: "age range"
          )
        end
      end
    end

    summary_list.row(html_attributes: { data: { qa: "course__outcome" } }) do |row|
      row.key { "Qualification" }
      row.value { course.outcome }
      if course.is_withdrawn?
        row.action
      else
        row.action(
          href: outcome_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
          visually_hidden_text: "outcome"
        )
      end
    end

    if @provider.accredited_body?
      summary_list.row(html_attributes: { data: { qa: "course__apprenticeship" } }) do |row|
        row.key { "Apprenticeship" }
        row.value { course.apprenticeship }
        if course.is_published? || course.is_withdrawn?
          row.action
        else
          row.action(
            href: course.draft_or_rolled_over? ? apprenticeship_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code) : nil,
            visually_hidden_text: "if apprenticeship"
          )
        end
      end
    else
      summary_list.row(html_attributes: { data: { qa: "course__funding" } }) do |row|
        row.key { "Funding type" }
        row.value { course.funding }
        if course.is_published? || course.is_withdrawn?
          row.action
        else
          row.action(
            href: course.draft_or_rolled_over? ? funding_type_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code) : nil,
            visually_hidden_text: "funding type"
          )
        end
      end
    end

    summary_list.row(html_attributes: { data: { qa: "course__study_mode" } }) do |row|
      row.key { "Full or part time" }
      row.value { course.study_mode&.humanize }
      if course.is_withdrawn?
        row.action
      else
        row.action(
          href: full_part_time_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
          visually_hidden_text: "if full or part time"
        )
      end
    end

    summary_list.row(html_attributes: { data: { qa: "course__locations" } }) do |row|
      row.key { "Location".pluralize(course.sites.length) }
      row.value do
        if course.sites.blank?
          raw("<span class=\"app-!-colour-muted\">None</span>")
        elsif course.sites.size == 1
          course.sites.first.location_name
        else
          location_names = course.alphabetically_sorted_sites.map do |site|
            "<li>#{site.location_name}</li>"
          end
          raw("<ul class=\"govuk-list\">#{location_names.join}</ul>")
        end
      end

      if course.is_withdrawn?
        row.action
      else
        row.action(
          href: locations_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
          visually_hidden_text: "locations"
        )
      end
    end

    unless @provider.accredited_body?
      summary_list.row(html_attributes: { data: { qa: "course__accredited_body" } }) do |row|
        row.key { "Accredited body" }
        row.value { course.accrediting_provider&.provider_name }
        if course.is_published? || course.is_withdrawn?
          row.action
        else
          row.action(**{
                        # href: accredited_body_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
                        # visually_hidden_text: "accredited body",
                      })
        end
      end
    end

    if course.is_fee_based?
      summary_list.row(html_attributes: { data: { qa: "course__can_sponsor_student_visa" } }) do |row|
        row.key { "Student visas" }
        row.value { course.can_sponsor_student_visa ? "Yes - can sponsor " : "No - cannot sponsor" }
        if course.changeable?
          row.action(
            href: student_visa_sponsorship_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code, back_to_basic_details: true),
            visually_hidden_text: "can sponsor student visa"
          )
        else
          row.action
        end
      end
    else
      summary_list.row(html_attributes: { data: { qa: "course__can_sponsor_skilled_worker_visa" } }) do |row|
        row.key { "Skilled Worker visas" }
        row.value { course.can_sponsor_skilled_worker_visa ? "Yes - can sponsor " : "No - cannot sponsor" }
        if course.changeable?
          row.action(
            href: skilled_worker_visa_sponsorship_publish_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code, back_to_basic_details: true),
            visually_hidden_text: "can sponsor skilled_worker visa"
          )
        else
          row.action
        end
      end
    end

    summary_list.row(html_attributes: { data: { qa: "course__applications_open" } }) do |row|
      row.key { "Applications open date" }
      row.value { l(course.applications_open_from&.to_date) }
      if course.edit_course_options[:show_applications_open]
        row.action(**{
                      # href: applications_open_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
                      # visually_hidden_text: "date applications open",
                    })
      else
        row.action
      end
    end

    summary_list.row(html_attributes: { data: { qa: "course__start_date" } }) do |row|
      row.key { "Course start date" }
      row.value do
        raw("<p class=\"govuk-body\">#{l(course.start_date&.to_date, format: :short)} </p>
              <p class=\"govuk-hint govuk-!-margin-top-0\">Academic year #{course.academic_year} </p>")
      end
      if course.edit_course_options[:show_start_date]
        row.action(**{
                      # href: start_date_provider_recruitment_cycle_course_path(@provider.provider_code, course.recruitment_cycle_year, course.course_code),
                      # visually_hidden_text: "date course starts",
                    })
      else
        row.action
      end
    end %>
<% end %>
